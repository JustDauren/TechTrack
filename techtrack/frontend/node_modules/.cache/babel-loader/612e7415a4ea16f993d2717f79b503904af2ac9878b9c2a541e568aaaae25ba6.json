{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dauren\\\\PycharmProjects\\\\techtrack\\\\techtrack\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { checkAuthState, login, logout, fetchUserProfile } from '../store/slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  login: async () => {},\n  logout: () => {},\n  error: null\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const dispatch = useAppDispatch();\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    error\n  } = useAppSelector(state => state.auth);\n  useEffect(() => {\n    // Check if user is already logged in\n    dispatch(checkAuthState());\n  }, [dispatch]);\n\n  // Login function\n  const handleLogin = async (username, password) => {\n    await dispatch(login({\n      username,\n      password\n    })).unwrap();\n    await dispatch(fetchUserProfile()).unwrap();\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login: handleLogin,\n    logout: handleLogout,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"LTMOCIC2oLAL/ABTk2CIkXHPeVg=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useAppDispatch","useAppSelector","checkAuthState","login","logout","fetchUserProfile","jsxDEV","_jsxDEV","AuthContext","user","isAuthenticated","isLoading","error","useAuth","_s","AuthProvider","children","_s2","dispatch","state","auth","handleLogin","username","password","unwrap","handleLogout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dauren/PycharmProjects/techtrack/techtrack/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { checkAuthState, login, logout, fetchUserProfile } from '../store/slices/authSlice';\r\nimport { User } from '../types';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  error: string | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  login: async () => {},\r\n  logout: () => {},\r\n  error: null,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { user, isAuthenticated, isLoading, error } = useAppSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    dispatch(checkAuthState());\r\n  }, [dispatch]);\r\n\r\n  // Login function\r\n  const handleLogin = async (username: string, password: string) => {\r\n    await dispatch(login({ username, password })).unwrap();\r\n    await dispatch(fetchUserProfile()).unwrap();\r\n  };\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login: handleLogin,\r\n    logout: handleLogout,\r\n    error,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAkB,OAAO;AAC7E,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,cAAc,EAAEC,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY5F,MAAMC,WAAW,gBAAGX,aAAa,CAAkB;EACjDY,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,IAAI;EACfR,KAAK,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACrBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChBQ,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMhB,UAAU,CAACU,WAAW,CAAC;AAAA;AAACM,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAMC,QAAQ,GAAGlB,cAAc,CAAC,CAAC;EACjC,MAAM;IAAES,IAAI;IAAEC,eAAe;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGX,cAAc,CAACkB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAEvFrB,SAAS,CAAC,MAAM;IACd;IACAmB,QAAQ,CAAChB,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACgB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMG,WAAW,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAChE,MAAML,QAAQ,CAACf,KAAK,CAAC;MAAEmB,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;IACtD,MAAMN,QAAQ,CAACb,gBAAgB,CAAC,CAAC,CAAC,CAACmB,MAAM,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBP,QAAQ,CAACd,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAMsB,KAAK,GAAG;IACZjB,IAAI;IACJC,eAAe;IACfC,SAAS;IACTR,KAAK,EAAEkB,WAAW;IAClBjB,MAAM,EAAEqB,YAAY;IACpBb;EACF,CAAC;EAED,oBAAOL,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EAAEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACd,GAAA,CA9BWF,YAAqD;EAAA,QAC/Cf,cAAc,EACqBC,cAAc;AAAA;AAAA+B,EAAA,GAFvDjB,YAAqD;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}