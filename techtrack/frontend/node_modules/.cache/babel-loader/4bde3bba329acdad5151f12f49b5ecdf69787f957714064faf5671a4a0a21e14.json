{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Удалили зависимость от services/api\n\nconst initialState = {\n  equipment: [],\n  loading: false,\n  error: null\n};\n\n// Добавляем отсутствующий fetchEquipment action creator\nexport const fetchEquipment = createAsyncThunk('equipment/fetchEquipment', async (_, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    dispatch(setLoading(true));\n\n    // Здесь должен быть вызов API\n    // Вместо внешнего API, используем имитацию\n    // В реальном проекте здесь должен быть вызов вашего API\n    const mockResponse = await new Promise(resolve => {\n      setTimeout(() => {\n        resolve([]);\n      }, 500);\n    });\n    dispatch(setLoading(false));\n    return mockResponse;\n  } catch (error) {\n    dispatch(setLoading(false));\n    return rejectWithValue(error.message || 'Не удалось загрузить оборудование');\n  }\n});\nconst equipmentSlice = createSlice({\n  name: 'equipment',\n  initialState,\n  reducers: {\n    setEquipment: (state, action) => {\n      state.equipment = action.payload;\n      state.loading = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchEquipment.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchEquipment.fulfilled, (state, action) => {\n      state.equipment = action.payload;\n      state.loading = false;\n    }).addCase(fetchEquipment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setEquipment,\n  setLoading,\n  setError\n} = equipmentSlice.actions;\nexport default equipmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","equipment","loading","error","fetchEquipment","_","dispatch","rejectWithValue","setLoading","mockResponse","Promise","resolve","setTimeout","message","equipmentSlice","name","reducers","setEquipment","state","action","payload","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Dauren/PycharmProjects/techtrack/techtrack/frontend/src/store/slices/equipmentSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { Equipment } from '../../types';\r\n// Удалили зависимость от services/api\r\n\r\ninterface EquipmentState {\r\n  equipment: Equipment[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: EquipmentState = {\r\n  equipment: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Добавляем отсутствующий fetchEquipment action creator\r\nexport const fetchEquipment = createAsyncThunk(\r\n  'equipment/fetchEquipment',\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n\r\n      // Здесь должен быть вызов API\r\n      // Вместо внешнего API, используем имитацию\r\n      // В реальном проекте здесь должен быть вызов вашего API\r\n      const mockResponse = await new Promise<Equipment[]>((resolve) => {\r\n        setTimeout(() => {\r\n          resolve([]);\r\n        }, 500);\r\n      });\r\n\r\n      dispatch(setLoading(false));\r\n      return mockResponse;\r\n    } catch (error: any) {\r\n      dispatch(setLoading(false));\r\n      return rejectWithValue(error.message || 'Не удалось загрузить оборудование');\r\n    }\r\n  }\r\n);\r\n\r\nconst equipmentSlice = createSlice({\r\n  name: 'equipment',\r\n  initialState,\r\n  reducers: {\r\n    setEquipment: (state, action: PayloadAction<Equipment[]>) => {\r\n      state.equipment = action.payload;\r\n      state.loading = false;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchEquipment.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchEquipment.fulfilled, (state, action) => {\r\n        state.equipment = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchEquipment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { setEquipment, setLoading, setError } = equipmentSlice.actions;\r\nexport default equipmentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAiBC,gBAAgB,QAAQ,kBAAkB;;AAE/E;;AAQA,MAAMC,YAA4B,GAAG;EACnCC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGL,gBAAgB,CAC5C,0BAA0B,EAC1B,OAAOM,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACFD,QAAQ,CAACE,UAAU,CAAC,IAAI,CAAC,CAAC;;IAE1B;IACA;IACA;IACA,MAAMC,YAAY,GAAG,MAAM,IAAIC,OAAO,CAAeC,OAAO,IAAK;MAC/DC,UAAU,CAAC,MAAM;QACfD,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC;IAEFL,QAAQ,CAACE,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,OAAOC,YAAY;EACrB,CAAC,CAAC,OAAON,KAAU,EAAE;IACnBG,QAAQ,CAACE,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,OAAOD,eAAe,CAACJ,KAAK,CAACU,OAAO,IAAI,mCAAmC,CAAC;EAC9E;AACF,CACF,CAAC;AAED,MAAMC,cAAc,GAAGhB,WAAW,CAAC;EACjCiB,IAAI,EAAE,WAAW;EACjBf,YAAY;EACZgB,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAkC,KAAK;MAC3DD,KAAK,CAACjB,SAAS,GAAGkB,MAAM,CAACC,OAAO;MAChCF,KAAK,CAAChB,OAAO,GAAG,KAAK;IACvB,CAAC;IACDM,UAAU,EAAEA,CAACU,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAAChB,OAAO,GAAGiB,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACf,KAAK,GAAGgB,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAAChB,OAAO,GAAG,KAAK;IACvB;EACF,CAAC;EACDoB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,cAAc,CAACqB,OAAO,EAAGP,KAAK,IAAK;MAC1CA,KAAK,CAAChB,OAAO,GAAG,IAAI;MACpBgB,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDqB,OAAO,CAACpB,cAAc,CAACsB,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACjB,SAAS,GAAGkB,MAAM,CAACC,OAAO;MAChCF,KAAK,CAAChB,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDsB,OAAO,CAACpB,cAAc,CAACuB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAAChB,OAAO,GAAG,KAAK;MACrBgB,KAAK,CAACf,KAAK,GAAGgB,MAAM,CAACC,OAAiB;IACxC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,YAAY;EAAET,UAAU;EAAEa;AAAS,CAAC,GAAGP,cAAc,CAACc,OAAO;AAC5E,eAAed,cAAc,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}