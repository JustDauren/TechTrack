{"ast":null,"code":"import api from './api';\n// Auth service\nconst authService = {\n  // Login user\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await api.post('/auth/login', formData);\n    return response.data;\n  },\n  // Register user\n  async register(userData) {\n    const response = await api.post('/users/', userData);\n    return response.data;\n  },\n  // Logout user\n  logout() {\n    localStorage.removeItem('token');\n  },\n  // Get current user\n  async getCurrentUser() {\n    const response = await api.get('/users/me');\n    return response.data;\n  },\n  // Update user profile\n  async updateProfile(userData) {\n    const response = await api.put('/users/me', userData);\n    return response.data;\n  },\n  // Change password\n  async changePassword(oldPassword, newPassword) {\n    const response = await api.put('/users/me', {\n      password: newPassword\n    });\n    return response.data;\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","username","password","formData","FormData","append","response","post","data","register","userData","logout","localStorage","removeItem","getCurrentUser","get","updateProfile","put","changePassword","oldPassword","newPassword"],"sources":["C:/Users/Dauren/PycharmProjects/techtrack/techtrack/frontend/src/services/auth.ts"],"sourcesContent":["import api from './api';\r\nimport { User, RegisterData } from '../types';\r\n\r\n// Auth service\r\nconst authService = {\r\n  // Login user\r\n  async login(username: string, password: string): Promise<{ access_token: string; token_type: string }> {\r\n    const formData = new FormData();\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n\r\n    const response = await api.post('/auth/login', formData);\r\n    return response.data;\r\n  },\r\n\r\n  // Register user\r\n  async register(userData: RegisterData): Promise<User> {\r\n    const response = await api.post('/users/', userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Logout user\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  // Get current user\r\n  async getCurrentUser(): Promise<User> {\r\n    const response = await api.get('/users/me');\r\n    return response.data;\r\n  },\r\n\r\n  // Update user profile\r\n  async updateProfile(userData: Partial<User>): Promise<User> {\r\n    const response = await api.put('/users/me', userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Change password\r\n  async changePassword(oldPassword: string, newPassword: string): Promise<User> {\r\n    const response = await api.put('/users/me', {\r\n      password: newPassword,\r\n    });\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB;AACA,MAAMC,WAAW,GAAG;EAClB;EACA,MAAMC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB,EAAyD;IACrG,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACrCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAErC,MAAMI,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,aAAa,EAAEJ,QAAQ,CAAC;IACxD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMC,QAAQA,CAACC,QAAsB,EAAiB;IACpD,MAAMJ,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,SAAS,EAAEG,QAAQ,CAAC;IACpD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,MAAMA,CAAA,EAAS;IACbC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED;EACA,MAAMC,cAAcA,CAAA,EAAkB;IACpC,MAAMR,QAAQ,GAAG,MAAMR,GAAG,CAACiB,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMQ,aAAaA,CAACN,QAAuB,EAAiB;IAC1D,MAAMJ,QAAQ,GAAG,MAAMR,GAAG,CAACmB,GAAG,CAAC,WAAW,EAAEP,QAAQ,CAAC;IACrD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMU,cAAcA,CAACC,WAAmB,EAAEC,WAAmB,EAAiB;IAC5E,MAAMd,QAAQ,GAAG,MAAMR,GAAG,CAACmB,GAAG,CAAC,WAAW,EAAE;MAC1Cf,QAAQ,EAAEkB;IACZ,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}