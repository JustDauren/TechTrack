{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  mobileMenuOpen: false,\n  city: 'Алматы',\n  availableCities: ['Алматы', 'Астана', 'Шымкент', 'Караганда'],\n  theme: 'light',\n  offlineMode: false\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setMobileMenuOpen: (state, action) => {\n      state.mobileMenuOpen = action.payload;\n    },\n    setCityFilter: (state, action) => {\n      state.city = action.payload;\n      // If this is a new city, add it to available cities\n      if (!state.availableCities.includes(action.payload)) {\n        state.availableCities.push(action.payload);\n      }\n    },\n    addCity: (state, action) => {\n      if (!state.availableCities.includes(action.payload)) {\n        state.availableCities.push(action.payload);\n      }\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n\n      // Apply theme to document\n      if (action.payload === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    },\n    setOfflineMode: (state, action) => {\n      state.offlineMode = action.payload;\n    }\n  }\n});\nexport const {\n  setMobileMenuOpen,\n  setCityFilter,\n  addCity,\n  setTheme,\n  setOfflineMode\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mobileMenuOpen","city","availableCities","theme","offlineMode","uiSlice","name","reducers","setMobileMenuOpen","state","action","payload","setCityFilter","includes","push","addCity","setTheme","document","documentElement","classList","add","remove","setOfflineMode","actions","reducer"],"sources":["C:/Users/Dauren/PycharmProjects/techtrack/techtrack/frontend/src/store/slices/uiSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type Theme = 'light' | 'dark';\r\n\r\ninterface UIState {\r\n  mobileMenuOpen: boolean;\r\n  city: string;\r\n  availableCities: string[];\r\n  theme: Theme;\r\n  offlineMode: boolean;\r\n}\r\n\r\nconst initialState: UIState = {\r\n  mobileMenuOpen: false,\r\n  city: 'Алматы',\r\n  availableCities: ['Алматы', 'Астана', 'Шымкент', 'Караганда'],\r\n  theme: 'light',\r\n  offlineMode: false,\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    setMobileMenuOpen: (state, action: PayloadAction<boolean>) => {\r\n      state.mobileMenuOpen = action.payload;\r\n    },\r\n    setCityFilter: (state, action: PayloadAction<string>) => {\r\n      state.city = action.payload;\r\n      // If this is a new city, add it to available cities\r\n      if (!state.availableCities.includes(action.payload)) {\r\n        state.availableCities.push(action.payload);\r\n      }\r\n    },\r\n    addCity: (state, action: PayloadAction<string>) => {\r\n      if (!state.availableCities.includes(action.payload)) {\r\n        state.availableCities.push(action.payload);\r\n      }\r\n    },\r\n    setTheme: (state, action: PayloadAction<Theme>) => {\r\n      state.theme = action.payload;\r\n\r\n      // Apply theme to document\r\n      if (action.payload === 'dark') {\r\n        document.documentElement.classList.add('dark');\r\n      } else {\r\n        document.documentElement.classList.remove('dark');\r\n      }\r\n    },\r\n    setOfflineMode: (state, action: PayloadAction<boolean>) => {\r\n      state.offlineMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMobileMenuOpen,\r\n  setCityFilter,\r\n  addCity,\r\n  setTheme,\r\n  setOfflineMode,\r\n} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,YAAqB,GAAG;EAC5BC,cAAc,EAAE,KAAK;EACrBC,IAAI,EAAE,QAAQ;EACdC,eAAe,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;EAC7DC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,OAAO,GAAGP,WAAW,CAAC;EAC1BQ,IAAI,EAAE,IAAI;EACVP,YAAY;EACZQ,QAAQ,EAAE;IACRC,iBAAiB,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MAC5DD,KAAK,CAACT,cAAc,GAAGU,MAAM,CAACC,OAAO;IACvC,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;MAC3B;MACA,IAAI,CAACF,KAAK,CAACP,eAAe,CAACW,QAAQ,CAACH,MAAM,CAACC,OAAO,CAAC,EAAE;QACnDF,KAAK,CAACP,eAAe,CAACY,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MAC5C;IACF,CAAC;IACDI,OAAO,EAAEA,CAACN,KAAK,EAAEC,MAA6B,KAAK;MACjD,IAAI,CAACD,KAAK,CAACP,eAAe,CAACW,QAAQ,CAACH,MAAM,CAACC,OAAO,CAAC,EAAE;QACnDF,KAAK,CAACP,eAAe,CAACY,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MAC5C;IACF,CAAC;IACDK,QAAQ,EAAEA,CAACP,KAAK,EAAEC,MAA4B,KAAK;MACjDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;;MAE5B;MACA,IAAID,MAAM,CAACC,OAAO,KAAK,MAAM,EAAE;QAC7BM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAChD,CAAC,MAAM;QACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACnD;IACF,CAAC;IACDC,cAAc,EAAEA,CAACb,KAAK,EAAEC,MAA8B,KAAK;MACzDD,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,iBAAiB;EACjBI,aAAa;EACbG,OAAO;EACPC,QAAQ;EACRM;AACF,CAAC,GAAGjB,OAAO,CAACkB,OAAO;AAEnB,eAAelB,OAAO,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}