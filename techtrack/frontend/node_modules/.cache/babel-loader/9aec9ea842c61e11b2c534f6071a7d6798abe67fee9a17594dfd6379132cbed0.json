{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/auth';\n\n// Define interfaces for state\n\n// Define initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async ({\n  username,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(username, password);\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Ошибка при входе');\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(userData);\n    return response;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Ошибка при регистрации');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  authService.logout();\n});\nexport const fetchUserProfile = createAsyncThunk('auth/fetchUserProfile', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.getCurrentUser();\n    return response;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Ошибка при получении профиля');\n  }\n});\nexport const checkAuthState = createAsyncThunk('auth/checkAuthState', async (_, {\n  dispatch\n}) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      // Validate token by fetching user profile\n      const user = await authService.getCurrentUser();\n      return {\n        user,\n        token\n      };\n    } catch (error) {\n      // If token is invalid, clear it\n      localStorage.removeItem('token');\n      return {\n        user: null,\n        token: null\n      };\n    }\n  }\n  return {\n    user: null,\n    token: null\n  };\n});\n\n// Create slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    resetError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    // Login\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.access_token;\n      localStorage.setItem('token', action.payload.access_token);\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n\n    // Register\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(register.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n\n    // Logout\n    builder.addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    });\n\n    // Fetch user profile\n    builder.addCase(fetchUserProfile.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    });\n    builder.addCase(fetchUserProfile.rejected, state => {\n      state.isLoading = false;\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    });\n\n    // Check auth state\n    builder.addCase(checkAuthState.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(checkAuthState.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = !!action.payload.user;\n    });\n  }\n});\nexport const {\n  resetError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","login","username","password","rejectWithValue","response","_error$response","_error$response$data","data","detail","register","userData","_error$response2","_error$response2$data","logout","fetchUserProfile","_","getCurrentUser","_error$response3","_error$response3$data","checkAuthState","dispatch","removeItem","authSlice","name","reducers","resetError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","access_token","setItem","rejected","actions","reducer"],"sources":["C:/Users/Dauren/PycharmProjects/techtrack/techtrack/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport authService from '../../services/auth';\r\nimport { User } from '../../types';\r\n\r\n// Define interfaces for state\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Define initial state\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\n// Async thunks\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ username, password }: { username: string; password: string }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(username, password);\r\n      return response;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.detail || 'Ошибка при входе');\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData: { username: string; email: string; password: string }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      return response;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.detail || 'Ошибка при регистрации');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async () => {\r\n    authService.logout();\r\n  }\r\n);\r\n\r\nexport const fetchUserProfile = createAsyncThunk(\r\n  'auth/fetchUserProfile',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.getCurrentUser();\r\n      return response;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.detail || 'Ошибка при получении профиля');\r\n    }\r\n  }\r\n);\r\n\r\nexport const checkAuthState = createAsyncThunk(\r\n  'auth/checkAuthState',\r\n  async (_, { dispatch }) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        // Validate token by fetching user profile\r\n        const user = await authService.getCurrentUser();\r\n        return { user, token };\r\n      } catch (error) {\r\n        // If token is invalid, clear it\r\n        localStorage.removeItem('token');\r\n        return { user: null, token: null };\r\n      }\r\n    }\r\n    return { user: null, token: null };\r\n  }\r\n);\r\n\r\n// Create slice\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    resetError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Login\r\n    builder.addCase(login.pending, (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(login.fulfilled, (state, action: PayloadAction<{ access_token: string; token_type: string }>) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = true;\r\n      state.token = action.payload.access_token;\r\n      localStorage.setItem('token', action.payload.access_token);\r\n    });\r\n    builder.addCase(login.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload as string;\r\n    });\r\n\r\n    // Register\r\n    builder.addCase(register.pending, (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(register.fulfilled, (state) => {\r\n      state.isLoading = false;\r\n    });\r\n    builder.addCase(register.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload as string;\r\n    });\r\n\r\n    // Logout\r\n    builder.addCase(logout.fulfilled, (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem('token');\r\n    });\r\n\r\n    // Fetch user profile\r\n    builder.addCase(fetchUserProfile.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchUserProfile.fulfilled, (state, action: PayloadAction<User>) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload;\r\n    });\r\n    builder.addCase(fetchUserProfile.rejected, (state) => {\r\n      state.isLoading = false;\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem('token');\r\n    });\r\n\r\n    // Check auth state\r\n    builder.addCase(checkAuthState.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(checkAuthState.fulfilled, (state, action: PayloadAction<{ user: User | null; token: string | null }>) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isAuthenticated = !!action.payload.user;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { resetError } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}